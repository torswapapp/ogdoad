diff --git a/node_modules/react-native-svg/lib/typescript/xml.d.ts b/node_modules/react-native-svg/lib/typescript/xml.d.ts
index c44c83e..f1d2258 100644
--- a/node_modules/react-native-svg/lib/typescript/xml.d.ts
+++ b/node_modules/react-native-svg/lib/typescript/xml.d.ts
@@ -27,7 +27,7 @@ export interface JsxAST extends AST {
 export type AdditionalProps = {
     onError?: (error: Error) => void;
     override?: object;
-    onLoad?: () => void;
+    onLoad?: (xml: string) => void;
     fallback?: JSX.Element;
 };
 export type UriProps = SvgProps & {
diff --git a/node_modules/react-native-svg/src/xml.tsx b/node_modules/react-native-svg/src/xml.tsx
index 9e2352a..c69a448 100644
--- a/node_modules/react-native-svg/src/xml.tsx
+++ b/node_modules/react-native-svg/src/xml.tsx
@@ -81,7 +81,7 @@ export interface JsxAST extends AST {
 export type AdditionalProps = {
   onError?: (error: Error) => void;
   override?: object;
-  onLoad?: () => void;
+  onLoad?: (xml: string) => void;
   fallback?: JSX.Element;
 };
 
@@ -124,8 +124,9 @@ export function SvgXml(props: XmlProps) {
 
 export async function fetchText(uri: string) {
   const response = await fetch(uri);
-  if (response.ok || (response.status === 0 && uri.startsWith('file://'))) {
-    return await response.text();
+  if ((response.ok && response.headers.get('content-type') === 'image/svg+xml') || (response.status === 0 && uri.startsWith('file://'))) {
+    const result = await response.text();
+    return result?.replace(/&#.+?;/g, '') ?? null;  
   }
   throw new Error(`Fetching ${uri} failed with status ${response.status}`);
 }
@@ -140,7 +141,7 @@ export function SvgUri(props: UriProps) {
           .then((data) => {
             setXml(data);
             isError && setIsError(false);
-            onLoad?.();
+            onLoad?.(data);
           })
           .catch((e) => {
             onError(e);
